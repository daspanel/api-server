# https://raw.githubusercontent.com/adnan-kamili/swagger-response-template/master/swagger.yaml
swagger: '2.0'
info:
    version: "1.0.0"
    title: DASPANEL Tenants API
    description: |

        Tenants related API methods.

        The first version of the Daspanel Sites API is an exciting step forward 
        towards making an hosting control panel using Docker. We created it so 
        that you can create any site, plain or using PHP, in your local machine 
        and when ready easy deploy it on an public server exactly as you see it 
        in the development machine.

        Build something great!

    version: "1.0"
    termsOfService: http://daspanel.com/terms/
    contact:
        name: Daspanel API team
        email: admin@daspanel.com
        url: http://daspanel.com
    license:
        name: GPL-3
        url: https://opensource.org/licenses/GPL-3.0
# array of all schemes that your API supports
schemes:
    - http
    - https
consumes:
    - application/json
produces:
    - application/json

security:
    - Bearer: []
securityDefinitions:
    Bearer:
        description: |
            For accessing the API a valid JWT token must be passed in all the queries in
            the 'Authorization' header.


            A valid JWT token is generated by the API and retourned as answer of a call
            to the route /login giving a valid user & password.


            The following syntax must be used in the 'Authorization' header :

                Bearer: xxxxxx.yyyyyyy.zzzzzz
        type: apiKey
        name: Authorization
        in: header
paths:
    /{cuid}:
        get:
            tags: [Tenants]
            x-swagger-router-controller: modules.tenants.api
            operationId: get_tenant
            summary: Get a single tenant
            parameters:
                - $ref: '#/parameters/cuid'
            responses:
                200:
                   description: Return tenant info
                   schema:
                        $ref: '#/definitions/Tenant'
                400:
                    $ref: '#/responses/400BadRequest'
                401:
                    $ref: '#/responses/401Unauthorized'
                403:
                    $ref: '#/responses/403Forbidden'
                404:
                    $ref: '#/responses/404NotFound'
                429:
                    $ref: '#/responses/429TooManyRequests'
                500:
                    $ref: '#/responses/500InternalServerError'
                503:
                    $ref: '#/responses/503ServiceUnavailable'
parameters:
    cuid:
        name: cuid
        description: Item Universal unique identifier
        in: path
        type: string
        required: true
        pattern: "^[a-zA-Z0-9-]+$"

# define reusable definitions:
definitions:
    Tenant:
        type: object
        required:
            - sys
            - smtp
            - redis
        properties:
            sys:
                type: object
                required:
                    - config_version
                    - apiserver
                    - admin
                    - password
                    - hostname
                    - msghub
                    - debug
                description: System config
                properties:
                    config_version:
                        type: string
                        description: Config format version
                        example: "0.1.0"
                        minLength: 5
                        maxLength: 256
                    apiserver:
                        type: string
                        description: Api server address
                        example: "http://daspanel-api:8080/1.0"
                        minLength: 1
                        maxLength: 255
                    admin:
                        type: string
                        description: Admin email
                        example: "admin@daspanel.site"
                        minLength: 1
                        maxLength: 255
                    password:
                        type: string
                        description: Admin password
                        example: "SomeGoodPAssword"
                        minLength: 8
                        maxLength: 32
                    hostname:
                        type: string
                        description: hostname running daspanel
                        example: "daspanel.site"
                        minLength: 1
                        maxLength: 255
                        pattern: "(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{1,63}(?<!-).)+[a-zA-Z]{2,63}$)"
                    msghub:
                        type: string
                        description: SMTP server to use to send Daspanel messages
                        example: "mail-catcher"
                        minLength: 1
                        maxLength: 255
                    debug:
                        type: boolean
                        description: Redirect have SSL
            smtp:
                type: object
                required:
                    - type
                    - server
                    - user
                    - password
                description: Smtp config
                properties:
                    type:
                        type: string
                        description: SMTP type
                        example: "mail-catcher"
                        minLength: 1
                        maxLength: 255
                    server:
                        type: string
                        description: SMTP server address with port
                        example: "daspanel-mail-catcher:1025"
                        minLength: 1
                        maxLength: 255
                    user:
                        type: string
                        description: SMTP user
                        example: "admin@daspanel.site"
                        minLength: 1
                        maxLength: 255
                    password:
                        type: string
                        description: SMTP user password
                        example: "SomeGoodPAssword"
                        minLength: 8
                        maxLength: 32
            redis:
                type: object
                required:
                    - server
                    - port
                    - database
                    - user
                    - password
                description: Redis config
                properties:
                    server:
                        type: string
                        description: Redis server address
                        example: "daspanel-redis"
                        minLength: 1
                        maxLength: 255
                    port:
                        type: integer
                        format: int32
                        description: Redis server port
                        default: 6379
                    database:
                        type: integer
                        format: int32
                        description: Redis database
                        default: 0
                        minimum: 0
                        maximum: 15
                    user:
                        type: string
                        description: Redis user (for future use)
                        example: "redis_user"
                        minLength: 1
                        maxLength: 255
                    password:
                        type: string
                        description: Redis user password
                        example: "civmw76wg000001p2dwqxpvet"
                        minLength: 8
                        maxLength: 32
            s3:
                type: object
                required:
                    - browser_url
                    - endpoint
                    - region
                    - access_key
                    - secret_key
                description: S3 config
                properties:
                    browser_url:
                        type: string
                        description: S3 service web file manager address
                        example: "https://s3.svc.daspanel.site"
                        minLength: 1
                        maxLength: 255
                    endpoint:
                        type: string
                        description: S3 service endpoint address
                        example: "https://s3.svc.daspanel.site"
                        minLength: 1
                        maxLength: 255
                    region:
                        type: string
                        description: S3 region
                        example: "us-east-1"
                        minLength: 1
                        maxLength: 255
                    access_key:
                        type: string
                        description: S3 user
                        example: "civmw76wg000001p2dwq"
                        minLength: 5
                        maxLength: 20
                    secret_key:
                        type: string
                        description: S3 password
                        example: "Ys309dLKds32jdssj8GqW32"
                        minLength: 8
                        maxLength: 40
            mysql:
                type: object
                required:
                    - server
                    - port
                    - user
                    - password
                description: MySql config
                properties:
                    server:
                        type: string
                        description: MySql server address
                        example: "daspanel-mysql"
                        minLength: 1
                        maxLength: 255
                    port:
                        type: integer
                        format: int32
                        description: MySql server port
                        default: 3306
                    user:
                        type: string
                        description: MySql user (for future use)
                        example: "root"
                        minLength: 1
                        maxLength: 255
                    password:
                        type: string
                        description: MySql user password
                        example: "civmw76wg000001p2dwqxpvet"
                        minLength: 8
                        maxLength: 32
            engines:
                type: array
                items:
                    $ref: '#/definitions/EngineObj'
            filemanager:
                type: object
                required:
                    - user
                    - password
                description: File manager config
                properties:
                    user:
                        type: string
                        description: Filemanager user
                        example: "admin@daspanel.site"
                        minLength: 1
                        maxLength: 255
                    password:
                        type: string
                        description: Filemanager user password
                        example: "civmw76wg000001p2dwqxpvet"
                        minLength: 8
                        maxLength: 32


    SiteTypeObj:
        type: object
        required:
            - sitetype
            - description
        properties:
            _cuid:
                type: string
                description: Universal unique id of the site type
                example: "cir22a51g0005mw45ay17gkeh"
                minLength: 25
                maxLength: 25
                readOnly: true
            sitetype:
                type: string
                description: Site type identifier
                example: "wordpress"
                minLength: 1
                maxLength: 64
            description:
                type: string
                description: Description of the site type
                example: "Wordpress 4.X"
                minLength: 1
                maxLength: 255

    EngineObj:
        type: object
        required:
            - provider
            - runtime
            - description
            - sitetypes
        properties:
            _cuid:
                type: string
                description: Universal unique id of the engine
                example: "cir22a51g0005mw45ay17gkeh"
                minLength: 25
                maxLength: 25
                readOnly: true
            provider:
                type: string
                description: Provider where the engine is running
                example: "DOCKER"
                minLength: 1
                maxLength: 64
            runtime:
                type: string
                description: Runtime/interpreter identifier
                example: "php71"
                minLength: 1
                maxLength: 64
            description:
                type: string
                description: Description of the engine
                example: "PHP 7.1 standard"
                minLength: 1
                maxLength: 255
            sitetypes:
                type: array
                items:
                    $ref: '#/definitions/SiteTypeObj'

    Message:
        type: object
        required:
            - status
            - type
            - title
            - detail
        properties:
            status:
                description: HTTP status code
                type: integer
                format: int32
                readOnly: true
            type:
                description: Url where the probem is documented
                type: string
                format: url
                readOnly: true
            title:
                description: Title of the problem
                type: string
                readOnly: true
            detail:
                description: Details about the problem
                type: string
                readOnly: true
    Error:
        type: object
        properties:
            status:
                type: integer
                format: int32
            type:
                type: string
                format: url
            title:
                type: string
            detail:
                type: string
    Errors:
        type: array
        items:
            $ref: '#/definitions/Error'

    ValidationError:
        type: object
        properties:
            message:
                type: string
            errors:
                $ref: '#/definitions/Errors'
# define reusable responses:
responses:
    Success:
        description: Success
    SuccessMessage:
        description: Success
        schema:
            $ref: '#/definitions/Message'
    202Accepted:
        description: The request was accepted.
        schema:
            $ref: '#/definitions/Message'
    400BadRequest:
        description: The request was invalid or cannot be otherwise served.
        schema:
            $ref: '#/definitions/Message'
    401Unauthorized:
        description: Authentication credentials were missing or incorrect.
        schema:
            $ref: '#/definitions/Message'
    403Forbidden:
        description: The request is understood, but it has been refused or access is not allowed.
        schema:
            $ref: '#/definitions/Message'
    404NotFound:
        description: The URI requested is invalid or the resource requested does not exists. 
        schema:
            $ref: '#/definitions/Message'
    429TooManyRequests:
        description: The request cannot be served due to the application’s rate limit having been exhausted for the resource. 
        schema:
            $ref: '#/definitions/Message'
    500InternalServerError:
        description: Something is broken.
        schema:
            $ref: '#/definitions/Message'
    503ServiceUnavailable:
        description: The server is up, but overloaded with requests. Try again later. 
        schema:
            $ref: '#/definitions/Message'

